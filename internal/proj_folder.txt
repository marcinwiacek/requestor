    <style>
	a {
            cursor: pointer;
	}
        ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }

        li {
            margin-left: 7px;
        }

        .file {
            display: block;
            list-style: none;
        }

        .folder {
            list-style: none;
            cursor: pointer;

            >ul {
                display: none;
            }
        }

        .folder-open {
            >ul {
                display: block;
                padding-left: 15px;
                margin-left: 9px;
                border-left: 2px solid $color-grey;
            }
        }

        .hide {
            display: none;
            position: absolute;
            z-index: 10;
        }

        .show {
            display: block;
            position: absolute;
            z-index: 10;
        }

        .disabled {
            color: grey;
        }
    </style>

<p>
    <div id="menu"></div>
    <div style="display:none" id="emptymenu">
        <a onclick="elementNew(true)">New testsuite</a><br />
    </div>

    <div class="hide" id="stepmenu" style="border: 5px outset black; background-color: white">
        <a onclick="elementNew(false)">New step</a><br />
        <a onclick="elementRename()">Rename</a><br />
        <a onclick="elementEnableDisable()">Disable/enable</a><br />
        <a onclick="elementDelete()">Delete</a><br />
        <a onclick="elementCopy()">Copy</a><br />
        <a onclick="elementPaste()">Paste</a><br />
    </div>

    <div class="hide" id="foldermenu" style="border: 5px outset black; background-color: white">
        <a onclick="elementNew(false)" id="foldermenunew">New</a><br />
        <a onclick="elementNewInside()" id="foldermenunewinside">New inside</a><br />
        <a onclick="elementRename()">Rename</a><br />
        <a onclick="elementEnableDisable()">Disable/enable</a><br />
        <a onclick="elementDelete()">Delete</a><br />
        <a onclick="elementCopy()">Copy</a><br />
        <a onclick="elementPaste()">Paste</a><br />
    </div>

    <!--TC-->

    <script>
        var popupMenuID = "";
        var popupMenuName = "";
        var copyID = "";

        function getPath(path) {
            var retVal = "";
            for (i = 0; i < path.length; i++) {
                if (retVal != "") retVal += "/";
                retVal += path[i];
            }
            console.log(retVal);
            return retVal;
        }

        function elementRename() {
            document.getElementById(popupMenuName).classList.toggle("show");

            let elpath = popupMenuID.split("/");
            let oldName = elpath[elpath.length - 1];

            while (true) {
                var newName = prompt("Please enter unique name", oldName);

                if (newName == null) {
                    break;
                }
                elpath[elpath.length - 1] = newName;
                newElementPath = getPath(elpath);

                if (document.getElementById(newElementPath) == null) {
                    params = new URLSearchParams(window.location.search);
                    executePOST("file=" + params.get("file") + "&" + "op=renameelement&" + "path=" + popupMenuID + "&" + "new=" + newName + "&newpath=" + newElementPath,
                        function(...args) {
                            el = document.getElementById(args[1]);
                            el.text = args[2];
                            var toggler = document.getElementsByClassName("tcts");
                            for (var i = 0; i < toggler.length; i++) {
                                if (toggler[i].id && toggler[i].id === popupMenuID) {
                                    toggler[i].id = toggler[i].id.replace(args[1], args[3]);
                                }
                            }
                            var toggler = document.getElementsByClassName("step");
                            for (var i = 0; i < toggler.length; i++) {
                                if (toggler[i].id && toggler[i].id === popupMenuID) {
                                    toggler[i].id = toggler[i].id.replace(args[1], args[3]);
                                }
                            }
                        },
                        popupMenuID, newName, newElementPath,
                    );
                    break;
                }
            }
        }

        function elementEnableDisable() {
            params = new URLSearchParams(window.location.search);
            executePOST("file=" + params.get("file") + "&op=enabledisableelement&path=" + popupMenuID,
                function(...args) {
                    document.getElementById(args[1]).classList.toggle("disabled");
                }, popupMenuID
            );

            document.getElementById(popupMenuName).classList.toggle("show");
        }

        function elementNew(empty) {
            if (!empty) document.getElementById(popupMenuName).classList.toggle("show");

            let oldName = "";
            if (popupMenuID == "/") popupMenuID = "";
            let elpath = popupMenuID.split("/");

            while (true) {
                var newName = prompt("Please enter unique name", oldName);
                oldName = newName;

                if (newName == null) {
                    break;
                }
                elpath[elpath.length - 1] = newName;
                newElementPath = getPath(elpath);

                if (document.getElementById(newElementPath) == null) {
                    params = new URLSearchParams(window.location.search);
                    executePOST("file=" + params.get("file") + "&" + "op=newelement&" + "path=" + popupMenuID + "&" + "new=" + newName,
                        function(...args) {
                            newEl = args[4] == 3 ? getFileElement(args[2], false, args[3]) :
                                getFolderElement(args[2], false, args[3], args[4] == 1 ? "ts" : "tc");

                            if (args[1] == "") {
                                document.getElementById("menu").firstChild.appendChild(newEl, args[2]);
                            } else {
                                el = document.getElementById(args[1]);
                                liparent = el.parentNode;
                                liparent.parentNode.insertBefore(newEl, liparent);
                            }

                            if (args[4] != 3) {
                                updateFolder(newEl);
                            }
        document.getElementById("emptymenu").style.display = 'none';

                        },
                        popupMenuID,
                        newName,
                        newElementPath,
                        elpath.length,
                    );
                    break;
                }
            }
        }

        function elementNewInside() {
            document.getElementById(popupMenuName).classList.toggle("show");

            let oldName = "";
            let elpath = popupMenuID.split("/");

            while (true) {
                var newName = prompt("Please enter unique name", oldName);
                oldName = newName;

                if (newName == null) {
                    break;
                }
                newElementPath = getPath(elpath) + "/" + newName;

                if (document.getElementById(newElementPath) == null) {
                    params = new URLSearchParams(window.location.search);
                    executePOST("file=" + params.get("file") + "&" + "op=newelementinside&" + "path=" + popupMenuID + "&" + "new=" + newName,
                        function(...args) {
                            newEl = args[4] == 2 ? getFileElement(args[2], false, args[3]) :
                                getFolderElement(args[2], false, args[3], args[4] == 1 ? "ts" : "tc");

                            el = document.getElementById(args[1]);
                            el.parentNode.children[2].prepend(newEl);

                            if (args[4] != 2) {
                                updateFolder(newEl);
                            }
                        },
                        popupMenuID,
                        newName,
                        newElementPath,
                        elpath.length,
                    );
                    break;
                }
            }
        }

        function elementDelete() {
            params = new URLSearchParams(window.location.search);
            executePOST(
                "file=" + params.get("file") + "&op=deleteelement&path=" + popupMenuID,
                function(...args) {
                    el = document.getElementById(popupMenuID);
                    el.parentNode.remove();
                },
                null,
            );
            document.getElementById(popupMenuName).classList.toggle("show");
        }

        function elementCopy() {
            copyID = popupMenuID;
            document.getElementById(popupMenuName).classList.toggle("show");
        }

        function elementPaste() {
            PasteDrop("paste");
            document.getElementById(popupMenuName).classList.toggle("show");
            copyID = "";
        }

        function cancelDefault(e) {
            e.preventDefault();
            e.stopPropagation();
            return false;
        }

        function dragStart(e) {
            e.dataTransfer.setData("text/plain", e.target.id);
        }

        function dropEnd(e) {
            cancelDefault(e);

            copyID = e.dataTransfer.getData("text/plain");
            popupMenuID = e.target.id;

            let isFolder1 = document.getElementById(copyID).classList.contains("tcts");
            let isFolder2 = document.getElementById(popupMenuID).classList.contains("tcts");
            console.log("file/folder drop " + copyID + " " + popupMenuID + " " + isFolder1 + " " + isFolder2);

            if (PasteDrop("drop")) {

            el = document.getElementById(copyID);
            el.parentNode.remove();
            copyID = "";
	    }
        }

        function PasteDrop(name) {
            let elpath1 = copyID.split("/");
            let elpath2 = popupMenuID.split("/");
            if (elpath2.length > elpath1.length || Math.abs(elpath2.length - elpath1.length) == 2) {
                console.log("not possible");
                return false;
            }

            console.log("copyID " + copyID);
            console.log("popupMenuID " + popupMenuID);

            if (elpath2.length == elpath1.length) {
                elpath2.pop();
                newElementPath = getPath(elpath2);
            } else {
                newElementPath = popupMenuID;
            }
            newElementPath = newElementPath + "/";
            if (newElementPath == "/") newElementPath = "";
            elpath2 = popupMenuID.split("/");

            params = new URLSearchParams(window.location.search);
            executePOST(
                "file=" + params.get("file") + "&op=" + name + "element&path=" + copyID + "&newpath=" + popupMenuID,
                function(...args) {
                    console.log(args);
                    if (args[3] == args[4]) {
                        el = document.getElementById(popupMenuID).parentNode;
                        console.log(el);

                        JSON.parse(args[0]).forEach(function(folder, index) {
                            el.parentNode.insertBefore(addFilesFolders(folder, args[1]), el);
                        });
                    } else {
                        el = document.getElementById(popupMenuID);
                        console.log(el);

                        JSON.parse(args[0]).forEach(function(folder, index) {
                            el.parentNode.children[2].prepend(addFilesFolders(folder, args[1]));
                        });
                    }

                    updateAllFolders();
                },
                newElementPath, copyID, elpath1.length, elpath2.length
            );
return true;
        }

        function getFolderElement(name, disabled, id, type) {
            const params = new URLSearchParams(window.location.search);
            console.log("adding folder " + id);

            let liel1 = document.createElement("li");
            liel1.setAttribute("class", "folder folder-open");

            let alel1 = document.createElement("a");
            alel1.text = name;
            alel1.setAttribute("id", id);
            alel1.setAttribute("class", "tcts" + (disabled ? " disabled" : "") + " " + type);
            alel1.onclick = function() {
                loadRightPart("file=" + params.get("file") + "&path=" + this.id);
            };

            alel1.setAttribute("draggable", true);
            alel1.addEventListener("dragstart", dragStart);
            alel1.addEventListener("drop", dropEnd);
            alel1.addEventListener("dragenter", cancelDefault);
            alel1.addEventListener("dragover", cancelDefault);

            updatePopupMenu(alel1, "folder");

            let ulel1 = document.createElement("ul");

            liel1.appendChild(alel1);
            liel1.appendChild(ulel1);
            return liel1;
        }

        function getFileElement(name, disabled, id) {
            const params = new URLSearchParams(window.location.search);
            console.log("adding file " + id);
            let liel2 = document.createElement("li");
            liel2.setAttribute("class", "file");

            let alel2 = document.createElement("a");
            alel2.text = name;
            alel2.setAttribute("id", id);
            alel2.setAttribute("class", "step" + (disabled ? " disabled" : ""));
            alel2.onclick = function() {
                document.getElementById("id").value = this.id;
                loadRightPart("file=" + params.get("file") + "&path=" + this.id);
            };

            liel2.appendChild(alel2);

            alel2.setAttribute("draggable", true);
            alel2.addEventListener("dragstart", dragStart);
            alel2.addEventListener("drop", dropEnd);
            alel2.addEventListener("dragenter", cancelDefault);
            alel2.addEventListener("dragover", cancelDefault);

            updatePopupMenu(alel2, "step");

            return liel2;
        }

        function addFilesFolders(treeObj, id) {
            const params = new URLSearchParams(window.location.search);
            let x = null;

            if (treeObj.folders || treeObj.files) {
                x = getFolderElement(treeObj.name, treeObj.disabled, id + treeObj.name, treeObj.type);

                treeObj.folders.forEach(function(folder, index) {
                    x.children[1].appendChild(addFilesFolders(folder, id + treeObj.name + "/"));
                });
                treeObj.files.forEach(function(file, index) {
                    fileel = getFileElement(file.name, treeObj.disabled,
                        id + treeObj.name + "/" + file.name);
                    x.children[1].appendChild(fileel);
                });
                return x;
            } else {
                return getFileElement(treeObj.name, treeObj.disabled,
                    id + treeObj.name);
            }
        }

        function updateFolder(obj) {
            const first = obj.firstChild;
            if (first.innerHTML == "\u25BC " || first.innerHTML == "\u25B6 ") return;
            const node = document.createElement("a");
            node.innerHTML = obj.classList.contains("folder-open") ?
                "\u25BC " :
                "\u25B6 ";
            node.addEventListener("click", function() {
                this.innerHTML = this.innerHTML == "\u25B6 " ? "\u25BC " : "\u25B6 ";
                this.parentElement.classList.toggle("folder-open");
            });
            obj.prepend(node);
        }

        function updateAllFolders() {
            var toggler = document.getElementsByClassName("folder");
            for (var i = 0; i < toggler.length; i++) {
                updateFolder(toggler[i]);
            }
        }

        function updatePopupMenu(toggler, name) {
            toggler.addEventListener("contextmenu", (e) => {
                popupMenuID = e.target.id;
                popupMenuName = name + "menu";

if (name=="folder") {
p = e.target.id.split("/");
if (p.length==1) {
                document.getElementById(name + "menunew").innerHTML = "New testsuite";
                document.getElementById(name + "menunewinside").innerHTML = "New testcase";


} else {
                document.getElementById(name + "menunew").innerHTML = "New testcase";
                document.getElementById(name + "menunewinside").innerHTML = "New step";
}
}
                document.getElementById(name + "menu").classList.toggle("show");
                e.preventDefault();
            });
            toggler.addEventListener("mousemove", (e) => {
                if (document.getElementById(name + "menu").classList.contains("show"))
                    return;
                if (!e) e = window.event;
                document.getElementById(name + "menu").style.top = e.pageY + "px";
                document.getElementById(name + "menu").style.left = e.pageX + "px";
            });
        }

if (tree.length == 0) {
        document.getElementById("emptymenu").style.display = 'block';
}
        ulel = document.createElement("ul");
        document.getElementById("menu").appendChild(ulel);
        tree.forEach(function(folder, index) {
            ulel.appendChild(addFilesFolders(folder, ""));
        });
        delete tree;

        updateAllFolders();
    </script>